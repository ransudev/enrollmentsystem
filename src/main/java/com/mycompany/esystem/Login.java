/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.esystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author lancejaspera.maiso
 */
public class Login extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Login.class.getName());
    private boolean loggedIn = false;
    private String loggedInUsername;
    private String loggedInPassword;

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        username = new javax.swing.JTextField();
        login = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        submit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        login.setText("login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        jLabel3.setText("School Year");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setEnabled(false); // Disabled until login is successful
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        submit.setText("submit");
        submit.setEnabled(false); // Disabled until login is successful
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(username)
                    .addComponent(login)
                    .addComponent(submit)
                    .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(login)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submit)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        String username = this.username.getText().trim();
        String password = new String(this.password.getPassword());
        
        if (username.isEmpty() || password.isEmpty()) {
            System.out.println("Please enter both username and password");
            JOptionPane.showMessageDialog(null, "Please enter both username and password", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Map application usernames to MySQL users
        String mysqlUsername;
        String mysqlPassword;
        
        if ("teacher".equalsIgnoreCase(username)) {
            mysqlUsername = "teacher";
            mysqlPassword = "TeacherPass123!";
        } else if ("student".equalsIgnoreCase(username)) {
            mysqlUsername = "student";
            mysqlPassword = "StudentPass123!";
        } else {
            // For other users (like root), use entered credentials
            mysqlUsername = username;
            mysqlPassword = password;
        }
        
        try {
            String url = "jdbc:mysql://192.168.64.3:3306/";
            Connection testConn = null;
            try {
                testConn = DriverManager.getConnection(url, mysqlUsername, mysqlPassword);
                System.out.println("MySQL Login Successful!");
                loggedIn = true;
                this.loggedInUsername = mysqlUsername;
                this.loggedInPassword = mysqlPassword;

                try (Statement stmt = testConn.createStatement();
                     ResultSet rs = stmt.executeQuery("SHOW DATABASES")) {
                    
                    jComboBox1.removeAllItems();
                    while (rs.next()) {
                        String dbName = rs.getString(1);
                        if (!dbName.equalsIgnoreCase("information_schema") && 
                            !dbName.equalsIgnoreCase("mysql") &&
                            !dbName.equalsIgnoreCase("performance_schema") &&
                            !dbName.equalsIgnoreCase("sys")) {
                            jComboBox1.addItem(dbName);
                        }
                    }
                    jComboBox1.setEnabled(true);
                    submit.setEnabled(true);
                }
            } catch (SQLException ex) {
                String errorMsg = ex.getMessage();
                if (errorMsg.contains("Access denied")) {
                    errorMsg = "Access denied for user '" + username + "' (using password: " + (password.isEmpty() ? "NO" : "YES") + ")";
                }
                JOptionPane.showMessageDialog(null, "Access Denied: " + errorMsg);
                System.out.println("Failed to connect: " + errorMsg);
            } finally {
                if (testConn != null) {
                    try { testConn.close(); } catch (SQLException e) {}
                }
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_loginActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // Get the selected database name from the combo box
        String selectedDatabase = (String) jComboBox1.getSelectedItem();
        
        if (selectedDatabase == null || selectedDatabase.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a database", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Update the database name in the main system
        MaisoEnrollmentSystem.db = selectedDatabase;
        
        // Only root user gets full database privileges
        if ("root".equalsIgnoreCase(loggedInUsername)) {
            // Admin/root: connect to database and go to StudentsForm
            MaisoEnrollmentSystem.uname = loggedInUsername;
            MaisoEnrollmentSystem.pswd = loggedInPassword;
            try {
                MaisoEnrollmentSystem.DBConnect();
                if (MaisoEnrollmentSystem.studentsFormInstance == null) {
                    MaisoEnrollmentSystem.studentsFormInstance = new StudentsForm();
                }
                MaisoEnrollmentSystem.studentsFormInstance.setVisible(true);
                this.dispose();
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Failed to connect to the selected database: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("Database connection failed: " + ex.getMessage());
                ex.printStackTrace();
                return;
            }
        }
        
        if (loggedInUsername.matches("\\d+.*")) { // Teacher usernames start with digits (tid + name)
   
            GradesForm gradesForm = new GradesForm();
            gradesForm.setVisible(true);
        } else {
            // Student users: go to StudRegistration (will connect to DB as needed with student privileges)
            StudRegistration studentRegistrationForm = new StudRegistration();
            studentRegistrationForm.setVisible(true);
        }
        
        // Close the login form
        this.dispose();
    }//GEN-LAST:event_submitActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Login().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton submit;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}

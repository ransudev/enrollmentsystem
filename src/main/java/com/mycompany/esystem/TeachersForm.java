/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.esystem;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;


/**
 *
 * @author ljamaiso
 */
public class TeachersForm extends javax.swing.JFrame {

    /**
     * Creates new form TeachersForm
     */
    public TeachersForm() {
        initComponents();
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        Tid = new javax.swing.JTextField();
        Tname = new javax.swing.JTextField();
        Tadd = new javax.swing.JTextField();
        Tcontact = new javax.swing.JTextField();
        Tdept = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        update = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TeacherTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        assign = new javax.swing.JButton();
        deletesub = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jMenuItem3.setText("jMenuItem3");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Tid.setEditable(false);
        Tid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TidActionPerformed(evt);
            }
        });

        Tcontact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TcontactActionPerformed(evt);
            }
        });

        Tdept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TdeptActionPerformed(evt);
            }
        });

        jLabel1.setText("Teacher's ID");

        jLabel2.setText("Enter Name");

        jLabel3.setText("Enter Address");

        jLabel4.setText("Enter Contact");

        jLabel5.setText("Enter Department");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        TeacherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Address", "Contact", "Department"
            }
        ));
        TeacherTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TeacherTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TeacherTable);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel6.setText("Teacher's Registration");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel7.setText("Assign Subjects");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        assign.setText("Assign Subject");
        assign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignActionPerformed(evt);
            }
        });

        deletesub.setText("Delete Subject");
        deletesub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletesubActionPerformed(evt);
            }
        });

        jLabel8.setText("Search");

        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jMenu1.setText("Form");

        jMenuItem1.setText("Subject");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Student");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator1);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jMenu1.add(exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deletesub)
                            .addComponent(assign)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(save)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(update))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Tname)
                                    .addComponent(Tadd)
                                    .addComponent(Tcontact)
                                    .addComponent(Tid)
                                    .addComponent(Tdept, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tcontact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tdept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save)
                            .addComponent(delete)
                            .addComponent(update)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(41, 41, 41)
                        .addComponent(assign, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deletesub, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TcontactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TcontactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TcontactActionPerformed

    private void TdeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TdeptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TdeptActionPerformed

    private void TidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TidActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        Teacher a =  new Teacher();
        int teacherId = a.SaveRecord(Tname.getText(), Tadd.getText(), Tcontact.getText(), Tdept.getText());
        showrec();
        
        // Create database user for the teacher
        createTeacherUser(teacherId, Tname.getText());
    }//GEN-LAST:event_saveActionPerformed

    private void createTeacherUser(int teacherId, String teacherName) {
        try {
            // Connect to MySQL as root to create user
            String host = "192.168.64.3";
            String url = "jdbc:mysql://" + host + ":3306/?zeroDateTimeBehavior=CONVERT_TO_NULL&connectTimeout=5000";
            Connection conn = DriverManager.getConnection(url, "root", "maiso");
            Statement stmt = conn.createStatement();
            
            // Create username (teacher id + teacher name) and password (AdDu + teacher name)
            String username = teacherId + teacherName.toLowerCase().replaceAll("\\s+", "");
            String password = "AdDu" + teacherName;
            
            // Create the user
            String createUserSQL = "CREATE USER IF NOT EXISTS '" + username + "'@'%' IDENTIFIED BY '" + password + "'";
            stmt.execute(createUserSQL);
            
            // Grant SELECT, INSERT, UPDATE privileges on relevant tables (no DELETE)
            stmt.execute("GRANT SELECT, INSERT, UPDATE ON `1st_SY2025_2026`.`Students` TO '" + username + "'@'%'");
            stmt.execute("GRANT SELECT, INSERT, UPDATE ON `1st_SY2025_2026`.`Teachers` TO '" + username + "'@'%'");
            stmt.execute("GRANT SELECT, INSERT, UPDATE ON `1st_SY2025_2026`.`Subjects` TO '" + username + "'@'%'");
            stmt.execute("GRANT SELECT, INSERT, UPDATE ON `1st_SY2025_2026`.`Enroll` TO '" + username + "'@'%'");
            stmt.execute("GRANT SELECT, INSERT, UPDATE ON `1st_SY2025_2026`.`Grades` TO '" + username + "'@'%'");
            stmt.execute("GRANT SELECT, INSERT, UPDATE ON `1st_SY2025_2026`.`Assign` TO '" + username + "'@'%'");
            stmt.execute("GRANT SELECT, INSERT, UPDATE ON `1st_SY2025_2026`.`Invoice` TO '" + username + "'@'%'");
            stmt.execute("GRANT SELECT, INSERT, UPDATE ON `1st_SY2025_2026`.`TransactionCharges` TO '" + username + "'@'%'");
            
            // Flush privileges
            stmt.execute("FLUSH PRIVILEGES");
            
            System.out.println("Created database user for teacher: " + username);
            System.out.println("Password: " + password);
            
            stmt.close();
            conn.close();
        } catch (Exception ex) {
            System.out.println("Failed to create database user for teacher: " + ex.getMessage());
            ex.printStackTrace();
        }
    }

    private void TeacherTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TeacherTableMouseClicked
        DefaultTableModel teachtable = (DefaultTableModel) TeacherTable.getModel();
        int selectedRow = TeacherTable.getSelectedRow();

        if (selectedRow != -1) { 
            Tid.setText(teachtable.getValueAt(selectedRow, 0).toString());
            Tname.setText(teachtable.getValueAt(selectedRow, 1).toString());
            Tadd.setText(teachtable.getValueAt(selectedRow, 2).toString());
            Tcontact.setText(teachtable.getValueAt(selectedRow, 3).toString());
            Tdept.setText(teachtable.getValueAt(selectedRow, 4).toString());
        
       
            int tid = Integer.parseInt(Tid.getText());
            showAssignedRec(tid);
        }
    }//GEN-LAST:event_TeacherTableMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Teacher a =  new Teacher();
        a.LoadRecord();
        showrec();
    }//GEN-LAST:event_formWindowOpened

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        Teacher b = new Teacher();
        b.DeleteRecord(Integer.valueOf(Tid.getText()));
        showrec();
        Tid.setText("");
        Tname.setText("");
        Tadd.setText("");
        Tcontact.setText("");
        Tdept.setText("");
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        Teacher a =  new Teacher();
        a.UpdateRecord(Integer.valueOf(Tid.getText()), Tname.getText(), Tadd.getText(), Tcontact.getText(), Tdept.getText());
        showrec();
        Tid.setText("");
        Tname.setText("");
        Tadd.setText("");
        Tcontact.setText("");
        Tdept.setText("");
    }//GEN-LAST:event_updateActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    if (MaisoEnrollmentSystem.subjectsFormInstance == null) {
        MaisoEnrollmentSystem.subjectsFormInstance = new SubjectsForm();
    }
    MaisoEnrollmentSystem.subjectsFormInstance.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    if (MaisoEnrollmentSystem.studentsFormInstance == null) {
        MaisoEnrollmentSystem.studentsFormInstance = new StudentsForm();
    }
    MaisoEnrollmentSystem.studentsFormInstance.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
    int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit the application?", "Confirm Exit",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE );
    if (response == JOptionPane.YES_OPTION) {
        System.exit(0);
    }
    }//GEN-LAST:event_exitActionPerformed

    private void assignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignActionPerformed
    String tidTxt = Tid.getText().trim();
    if (tidTxt.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a teacher first.");
        return;
    }
    int tid;
    try { tid = Integer.parseInt(tidTxt); }
    catch (NumberFormatException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Invalid teacher ID.");
        return;
    }

    if (MaisoEnrollmentSystem.subjectsFormInstance == null || !MaisoEnrollmentSystem.subjectsFormInstance.isDisplayable()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Open Subjects form and click a subject first.");
        return;
    }
    int subjid;
    try {
        java.lang.reflect.Field fTbl = SubjectsForm.class.getDeclaredField("subjectTable");
        fTbl.setAccessible(true);
        javax.swing.JTable tbl = (javax.swing.JTable) fTbl.get(MaisoEnrollmentSystem.subjectsFormInstance);
        int row = tbl.getSelectedRow();
        if (row < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please click a subject in the Subjects form first.");
            return;
        }
        subjid = Integer.parseInt(tbl.getValueAt(row, 0).toString()); // col 0 = Subject ID
    } catch (Exception ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Unable to read subject selection. Please re-open Subjects and select a subject.");
        return;
    }

    Assign asg = new Assign();
    asg.setsubjid(subjid);
    asg.AssignSubj(tid);

    showAssignedRec(tid);
    }//GEN-LAST:event_assignActionPerformed

    private void deletesubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletesubActionPerformed
    String tidTxt = Tid.getText().trim();
    if (tidTxt.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please select a teacher first.");
        return;
    }
    int tid;
    try {
        tid = Integer.parseInt(tidTxt);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Invalid teacher ID.");
        return;
    }

    int row = jTable1.getSelectedRow();  
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Select a subject from the assigned list to remove.");
        return;
    }

    int subjid;
    try {
        subjid = Integer.parseInt(jTable1.getValueAt(row, 0).toString()); 
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Invalid subject selection.");
        return;
    }

    int confirm = JOptionPane.showConfirmDialog(
        this,
        "Remove subject " + subjid + " from Teachers " + tid + "?",
        "Confirm",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE
    );
    if (confirm != JOptionPane.YES_OPTION) return;

    Assign asg = new Assign();
    asg.setsubjid(subjid);
    asg.DeleteSubj(tid);     

    showAssignedRec(tid);
    }//GEN-LAST:event_deletesubActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeachersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeachersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeachersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeachersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeachersForm().setVisible(true);
            }
        });
    }
    
    public void showrec(){
        DefaultTableModel teachTable = (DefaultTableModel) TeacherTable.getModel();
        teachTable.setRowCount(0);
        
        MaisoEnrollmentSystem a = new MaisoEnrollmentSystem();
        a.DBConnect();
        try{
            String query = "select * from Teachers;";
                a.rs = a.st.executeQuery(query);
                while (a.rs.next()){
                    String tid = a.rs.getString("Tid");
                    String tname = a.rs.getString("Tname");
                    String tadd = a.rs.getString("Tadd");
                    String tcontact = a.rs.getString("Tcontact");
                    String tdept = a.rs.getString("Tdept");
       
                    String[] item = {tid, tname, tadd, tcontact, tdept};
                    teachTable.addRow(item);
                }
        }catch (Exception ex) {
            System.out.println("FAILED" + ex);
        }
    }
    
    
    public void showAssignedRec(int tid) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // clear rows

        MaisoEnrollmentSystem a = new MaisoEnrollmentSystem();
        a.DBConnect();
        try {
        
            String sql =
                "SELECT a.subjid AS SubjID, s.subjcode AS Code, s.subjdesc AS Description, s.subjunits AS Units " +
                "FROM Assign a " +
                "INNER JOIN Subjects s ON s.subjid = a.subjid " +
                "WHERE a.tid = " + tid + " " +
                "ORDER BY a.subjid";
            a.rs = a.st.executeQuery(sql);
            while (a.rs.next()) {
                String[] row = {
                    a.rs.getString("SubjID"),
                    a.rs.getString("Code"),
                    a.rs.getString("Description"),
                    a.rs.getString("Units")
                };
                model.addRow(row);
            }
        } catch (Exception ex) {
            System.out.println("showAssignedRec FAILED: " + ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Tadd;
    private javax.swing.JTextField Tcontact;
    private javax.swing.JTextField Tdept;
    private javax.swing.JTable TeacherTable;
    private javax.swing.JTextField Tid;
    private javax.swing.JTextField Tname;
    private javax.swing.JButton assign;
    private javax.swing.JButton delete;
    private javax.swing.JButton deletesub;
    private javax.swing.JMenuItem exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton save;
    private javax.swing.JTextField search;
    private javax.swing.JToggleButton update;
    // End of variables declaration//GEN-END:variables
}
